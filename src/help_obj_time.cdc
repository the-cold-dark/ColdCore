
new object $help_obj_time: $help_obj;

var $dmi_data descriptions = #[];
var $has_name name = ['prop, "Time", "Time"];
var $help_node body = <$ctext_frob, [[<$format, ["p", [], [], 'do_p]>, "$time is a general utility object for handling time values that don't deal specifically with the game's time system. Those issues are covered by ", <$format, ["link", [["node", "$help_obj_world_time"]], ["$world_time"], 'do_link]>, ".", <$format, ["p", [], [], 'do_p]>, <$format, ["subj", [["level", "3"]], ["Methods"], 'do_subj]>, <$format, ["dl", [], [<$format, ["dt", [], [".", <$format, ["method", [["time.format", 1]], ["format"], 'do_method]>, "(", <$format, ["var", [], ["format"], 'do_var]>, ", ", <$format, ["var", [], ["time"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Given a format string, ", <$format, ["var", [], ["format"], 'do_var]>, " and a time in seconds, ", <$format, ["var", [], ["time"], 'do_var]>, ", returns the formatted time string. For now, revert to a man page for strftime for help on the format string."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["time.elapsed", 1]], ["elapsed"], 'do_method]>, "(", <$format, ["var", [], ["time"], 'do_var]>, ", [", <$format, ["var", [], ["flag"], 'do_var]>, "])"], 'do_dt]>, <$format, ["dd", [], ["Given a time ", <$format, ["var", [], ["time"], 'do_var]>, ", it returns the time between now and then. ", <$format, ["var", [], ["flag"], 'do_var]>, " controls how it is formatted. 'long will return it in the manner of .", <$format, ["method", [["time.to_english", 1]], ["to_english"], 'do_method]>, "(), while the default value, 'stopwatch, will return it as HH:MM:SS"], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["time.dhms", 1]], ["dhms"], 'do_method]>, "(", <$format, ["var", [], ["secs"], 'do_var]>, ", [", <$format, ["var", [], ["long"], 'do_var]>, "])"], 'do_dt]>, <$format, ["dd", [], ["Given a time, ", <$format, ["var", [], ["time"], 'do_var]>, ", it returns the number of days OR hours OR minutes OR seconds, which ever unit fits roughly. If the flag ", <$format, ["var", [], ["long"], 'do_var]>, " is true, it uses the full name of the unit of time."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["time.from_english", 1]], ["from_english"], 'do_method]>, "(", <$format, ["var", [], ["string"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Returns the number of seconds represented by the english description of time in the argument ", <$format, ["var", [], ["string"], 'do_var]>, ". This just defers to $world_time.", <$format, ["method", [["world_time.from_english", 1]], ["from_english"], 'do_method]>, "()."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["time.to_english", 1]], ["to_english"], 'do_method]>, "(", <$format, ["var", [], ["time"], 'do_var]>, ", [", <$format, ["var", [], ["reftime"], 'do_var]>, "])"], 'do_dt]>, <$format, ["dd", [], ["Given a number of seconds, ", <$format, ["var", [], ["time"], 'do_var]>, ", and an optional reference time, ", <$format, ["var", [], ["reftime"], 'do_var]>, ", which defaults to the current time, will return a string representing the time in English. This method attempts to take the varying number of days in a month and also leap years into account. NOTE: The results of this method when fed into .", <$format, ["method", [["time.from_english", 1]], ["from_english"], 'do_method]>, "(), will NOT return the original integer due to the lack of compensation for the things this method accounts for: the leap years, number of days in a month, etc."], 'do_dd]>], 'do_dl]>], #[['links, #[["$world_time", "$help_obj_world_time"]]]]]>;
var $help_node index = $help_index_objects;
var $help_node links = #[["$world_time", $help_obj_world_time]];
var $root created_on = 887988392;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_obj_time];
var $root manager = $help_obj_time;


