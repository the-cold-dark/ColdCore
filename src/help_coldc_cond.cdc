
new object $help_coldc_cond: $help_coldc_ops;

var $has_name name = ['prop, "Conditional", "Conditional"];
var $help_node body = <$ctext_frob, [[<$format, ["p", [], [], 'do_p]>, "The ", <$format, ["tt", [], ["||"], 'do_tt]>, " and ", <$format, ["tt", [], ["&&"], 'do_tt]>, " operators act as logical ", <$format, ["i", [], ["OR"], 'do_i]>, " and ", <$format, ["i", [], ["AND"], 'do_i]>, " operators, respectively. The expression ", <$format, ["tt", [], ["(this || that)"], 'do_tt]>, " is equivalent to ", <$format, ["i", [], ["this OR that"], 'do_i]>, ", where the return value of the expression is ", <$format, ["i", [], ["this"], 'do_i]>, " if ", <$format, ["i", [], ["this"], 'do_i]>, " is logically true. If ", <$format, ["i", [], ["this"], 'do_i]>, " is not logically true then the return value of the expression is ", <$format, ["i", [], ["that"], 'do_i]>, ". ", <$format, ["np", [], [], 'do_np]>, "The expression ", <$format, ["tt", [], ["(this && that)"], 'do_tt]>, " is equivalent to ", <$format, ["i", [], ["this AND that"], 'do_i]>, ", where the return value of the expression is logically true when both ", <$format, ["i", [], ["this"], 'do_i]>, " and ", <$format, ["i", [], ["that"], 'do_i]>, " are also logically true. If either ", <$format, ["i", [], ["this"], 'do_i]>, " or ", <$format, ["i", [], ["that"], 'do_i]>, " are not logically true then the return value is false. ", <$format, ["np", [], [], 'do_np]>, <$format, ["tt", [], ["ColdC"], 'do_tt]>, "'s conditional operators are ", <$format, ["i", [], ["short-circuit operators"], 'do_i]>, ", meaning that the right-hand argument is never evaluated if the left-hand argument is sufficient to determine the value of the expression. This is important if the right-hand argument has side-effects or could cause an error. For instance, because of this it is possible to have the following expression:", <$format, ["p", [], [], 'do_p]>, <$format, ["dfn", [], ["(| dict[key] |) || throw(~nope, \"Nope, doesn't exist\");"], 'do_dfn]>, <$format, ["p", [], [], 'do_p]>, "With this expression if ", <$format, ["i", [], ["key"], 'do_i]>, " is in the dictionary ", <$format, ["i", [], ["dict"], 'do_i]>, " then the return value is the related value to ", <$format, ["i", [], ["key"], 'do_i]>, ". If it is not, the error ", <$format, ["tt", [], ["~keynf"], 'do_tt]>, " is thrown by the index operator (", <$format, ["tt", [], ["[]"], 'do_tt]>, "). However, the expression is a ", <$format, ["i", [], [<$format, ["link", [["node", "$help_coldc_err_expr"]], ["critical expression"], 'do_link]>], 'do_i]>, ". Because of this the left value becomes ", <$format, ["i", [], ["~keynf"], 'do_i]>, ", which is logically false, and the interpreter moves onto the throw function. ", <$format, ["np", [], [], 'do_np]>, "The ", <$format, ["tt", [], ["? :"], 'do_tt]>, " operator is a trinary operator, with the following syntax:", <$format, ["p", [], [], 'do_p]>, <$format, ["dfn", [], [<$format, ["tt", [], [<$format, ["i", [], ["condition"], 'do_i]>, " ? ", <$format, ["i", [], ["true-expr"], 'do_i]>, " : ", <$format, ["i", [], ["false-expr"], 'do_i]>], 'do_tt]>], 'do_dfn]>, <$format, ["p", [], [], 'do_p]>, "The result of this expression is the result of ", <$format, ["i", [], ["true-expr"], 'do_i]>, " if ", <$format, ["i", [], ["condition"], 'do_i]>, " is true, or the result of ", <$format, ["i", [], ["false-expr"], 'do_i]>, " if ", <$format, ["i", [], ["condition"], 'do_i]>, " is false. This is similar to the ", <$format, ["link", [["node", "$help_coldc_cond_ifelse"]], ["Conditional if-else Statement"], 'do_link]>, "."], #[['this, $help_coldc_cond]]]>;
var $help_node index = $help_index_driver;
var $help_node links = #[["critical expression", $help_coldc_err_expr], ["Conditional if-else Statement", $help_coldc_cond_ifelse]];
var $help_node nolist = 0;
var $root created_on = 853827084;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_coldc_cond];
var $root manager = $help_coldc_cond;


