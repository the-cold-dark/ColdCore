
new object $help_obj_has_text_methods: $help_obj_has_text;

var $dmi_data descriptions = #[];
var $has_name name = ['prop, "Methods", "Methods"];
var $help_node body = <$ctext_frob, [[<$format, ["subj", [["level", "3"]], ["Methods"], 'do_subj]>, " ", <$format, ["subj", [["level", "4"]], ["Accessors"], 'do_subj]>, <$format, ["dl", [], [<$format, ["dt", [], [".", <$format, ["method", [["has_text.text", 1]], ["text"], 'do_method]>, "()"], 'do_dt]>, <$format, ["dd", [], ["Returns the text in the format it is stored in, either plaintext or the frob representation of CML."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["has_text.get_raw_text", 1]], ["get_raw_text"], 'do_method]>, "()"], 'do_dt]>, <$format, ["dd", [], ["Returns the raw text to be edited. For plaintext, this is the text, while for CML, this will be the decompiled CML in it's raw form."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["has_text.lines", 1]], ["lines"], 'do_method]>, "()"], 'do_dt]>, <$format, ["dd", [], ["Returns a number identifying how many lines of text there are. Note that with CML, this is not accurate for the formatted output but rather for the uncompiled CML text."], 'do_dd]>], 'do_dl]>, <$format, ["subj", [["level", "4"]], ["Mutators"], 'do_subj]>, " ", <$format, ["dt", [], [".", <$format, ["method", [["has_text.set_text", 1]], ["set_text"], 'do_method]>, "(", <$format, ["var", [], ["txt"], 'do_var]>, ")"], 'do_dt]>, " ", <$format, ["dd", [], ["Accepts either a single line of text or a list of lines as input. If the text is set to not be plaintext, it will compile the text with the CML compiler."], 'do_dd]>, " ", <$format, ["dt", [], [".", <$format, ["method", [["has_text.ins_line", 1]], ["ins_line"], 'do_method]>, "(", <$format, ["var", [], ["txt"], 'do_var]>, ", [", <$format, ["var", [], ["loc"], 'do_var]>, "])"], 'do_dt]>, " ", <$format, ["dd", [], ["Accepts a line of text and an optional location (given by line number) for where to put it. If the location is not specified, it defaults to adding the line of text at the end."], 'do_dd]>, " ", <$format, ["dt", [], [".", <$format, ["method", [["has_text.del_text", 1]], ["del_text"], 'do_method]>, "()"], 'do_dt]>, " ", <$format, ["dd", [], ["Clears the text."], 'do_dd]>, " ", <$format, ["dt", [], [".", <$format, ["method", [["has_text.del_line", 1]], ["del_line"], 'do_method]>, "(", <$format, ["var", [], ["linestr"], 'do_var]>, ")"], 'do_dt]>, " ", <$format, ["dd", [], ["Removes the first instance of the string (must be a complete line) given as the argument from the text."], 'do_dd]>, " ", <$format, ["dt", [], [".", <$format, ["method", [["has_text.del_nline", 1]], ["del_nline"], 'do_method]>, "(", <$format, ["var", [], ["nline"], 'do_var]>, ")"], 'do_dt]>, " ", <$format, ["dd", [], ["Removes the line specified by the line number given as the argument from the text."], 'do_dd]>, " ", <$format, ["dt", [], [".", <$format, ["method", [["has_text.ins_lines", 1]], ["ins_lines"], 'do_method]>, "(", <$format, ["var", [], ["lines"], 'do_var]>, ", ", <$format, ["var", [], ["loc"], 'do_var]>, ")"], 'do_dt]>, " ", <$format, ["dd", [], ["Inserts the list of strings at the specified location."], 'do_dd]>, "}"], #[]]>;
var $help_node links = #[];
var $root created_on = 864416982;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_obj_has_text_methods];
var $root manager = $help_obj_has_text_methods;


