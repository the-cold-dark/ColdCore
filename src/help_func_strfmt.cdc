
new object $help_func_strfmt: $help_funcs_str;

var $has_name name = ['prop, "strfmt()", "strfmt()"];
var $help_node body = <$ctext_frob, [[<$format, ["dfn", [], [<$format, ["tt", [], [<$format, ["i", [], ["STRING"], 'do_i]>, " strfmt(", <$format, ["i", [], ["STRING format"], 'do_i]>, ", ", <$format, ["i", [], ["ANY arg"], 'do_i]>, ", ", <$format, ["i", [], ["..."], 'do_i]>, ")"], 'do_tt]>], 'do_dfn]>, <$format, ["p", [], [], 'do_p]>, "This function formats its arguments and returns the result. How the arguments are formatted depends upon the argument ", <$format, ["i", [], ["format"], 'do_i]>, ". The format contains two types of sequences: plain characters, which are simply copied to the new string, and format specifications, each of which causes printing of the next successive argument. The format begins with a percent character (", <$format, ["tt", [], ["%"], 'do_tt]>, "), followed by:", <$format, ["p", [], [], 'do_p]>, <$format, ["dl", [], [<$format, ["dt", [], ["Pad Length"], 'do_dt]>, <$format, ["dd", [], ["The pad length is an integer which specifies the length of characters to pad the argument in. Pad Length is optional. Specifying a zero pad length will be ignored, and is equivalent to not specifying a pad length."], 'do_dd]>, <$format, ["dt", [], ["Precision"], 'do_dt]>, <$format, ["dd", [], ["A period (", <$format, ["tt", [], ["."], 'do_tt]>, "), followed by an integer specifies the precision, which specifies the number of digits to appear after the decimal point when printing FLOAT arguments. Precision is optional, and does not have to be specified. If it is specified it must come after the Pad Length (if specified), and before the Filler (if specified) or Format Type."], 'do_dd]>, <$format, ["dt", [], ["Filler"], 'do_dt]>, <$format, ["dd", [], ["Filler specifies what is used when padding a string within the Pad Length. Filler is specified within curly braces (", <$format, ["tt", [], ["{"], 'do_tt]>, " and ", <$format, ["tt", [], ["}"], 'do_tt]>, "). To include a curly brace in the filler prefix it with a backslash. The Filler must come after Pad Length or Precision, if they are specified, and before Format Type."], 'do_dd]>, <$format, ["dt", [], ["Format Type"], 'do_dt]>, <$format, ["dd", [], ["Format type must be specified last, and is not optional. Format Type specifies how the argument is to be handled. It is one of the following characters:", <$format, ["p", [], [], 'do_p]>, <$format, ["dl", [], [<$format, ["dt", [], [<$format, ["b", [], ["d"], 'do_b]>, " or ", <$format, ["b", [], ["D"], 'do_b]>], 'do_dt]>, <$format, ["dd", [], ["literal data"], 'do_dd]>, <$format, ["dt", [], [<$format, ["b", [], ["s"], 'do_b]>, " or ", <$format, ["b", [], ["S"], 'do_b]>, " or ", <$format, ["b", [], ["l"], 'do_b]>, " or ", <$format, ["b", [], ["L"], 'do_b]>], 'do_dt]>, <$format, ["dd", [], ["any data, align left"], 'do_dd]>, <$format, ["dt", [], [<$format, ["b", [], ["r"], 'do_b]>, " or ", <$format, ["b", [], ["R"], 'do_b]>], 'do_dt]>, <$format, ["dd", [], ["any data, align right"], 'do_dd]>, <$format, ["dt", [], [<$format, ["b", [], ["c"], 'do_b]>, " or ", <$format, ["b", [], ["C"], 'do_b]>], 'do_dt]>, <$format, ["dd", [], ["any data, align centered "], 'do_dd]>, <$format, ["dt", [], [<$format, ["b", [], ["e"], 'do_b]>], 'do_dt]>, <$format, ["dd", [], ["any data, align left with an elipse"], 'do_dd]>], 'do_dl]>, <$format, ["p", [], [], 'do_p]>, "If the Format Type is anything but ", <$format, ["b", [], ["d"], 'do_b]>, " or ", <$format, ["b", [], ["D"], 'do_b]>, ", the data will be converted as if it were \"added\" to a string ", <$format, ["link", [["node", "$help_coldc_non_arith"]], ["using the arithmetic operator"], 'do_link]>, ". If an uppercase character is used in the Format Type, any argument which has a length longer than the Pad Length will be truncated accordingly. Otherwise the argument will not be truncated. If an elipse is used, the argument will always be truncated three characters shorter than the Pad Length, with ", <$format, ["tt", [], ["\"...\""], 'do_tt]>, " being placed at the end."], 'do_dd]>], 'do_dl]>, <$format, ["p", [], [], 'do_p]>, "Examples:", <$format, ["p", [], [], 'do_p]>, <$format, ["dfn", [], ["strfmt(\"%r\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"test\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%l\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"test\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%c\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"test\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%d\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"\"test\"\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10r\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \" test\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10l\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"test \""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10c\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \" test \""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10{|>}r\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"|>|>|>test\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10{|>}l\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"test|>|>|>\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10{|>}c\", \"test\")", <$format, ["br", [], [], 'do_br]>, "=> \"|>|test|>|\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%.2l\", 1.1214)", <$format, ["br", [], [], 'do_br]>, "=> \"1.12\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10.3{0}r\", 1.1214)", <$format, ["br", [], [], 'do_br]>, "=> \"000001.121\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%10.3{0}r\", 1.1214)", <$format, ["br", [], [], 'do_br]>, "=> \"1.12100000\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%5e\", \"testing\")", <$format, ["br", [], [], 'do_br]>, "=> \"te...\""], 'do_dfn]>, " ", <$format, ["dfn", [], ["strfmt(\"%s parents: %25e\", \"$user\", [$body, $interaction, $mail_ui]);", <$format, ["br", [], [], 'do_br]>, "=> \"$user parents: [$body, $interaction, ...\""], 'do_dfn]>], #[['this, $help_func_strfmt]]]>;
var $help_node index = $help_index_function;
var $help_node links = #[["using the arithmetic operator", $help_coldc_non_arith]];
var $help_node nolist = 0;
var $root created_on = 855384458;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_func_strfmt];
var $root manager = $help_func_strfmt;


