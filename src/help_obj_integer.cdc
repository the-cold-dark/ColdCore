
new object $help_obj_integer: $help_obj;

var $dmi_data descriptions = #[];
var $has_name name = ['prop, "Integer", "Integer"];
var $help_node body = <$ctext_frob, [[<$format, ["dl", [["ind", "8"]], [<$format, ["dt", [], [".", <$format, ["method", [["integer.n_to_nth", 1]], ["n_to_nth"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given an integer, returns the numerical ordinal form. For example, given the integer '1', the method would return the string \"1st\"."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.parse_range", 1]], ["parse_range"], 'do_method]>, "(", <$format, ["var", [], ["range"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given a string representing a range, returns a list of two elements representing the range in a parsed form."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.to_english", 1]], ["to_english"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given a number, returns a string representation of that number that has had commas inserted according to the US standard."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.parse_range", 1]], ["parse_range"], 'do_method]>, "(", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given a lower and upper bound, returns a list of all numbers between them, including the bounds."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.to_string", 1]], ["to_string"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given an integer, converts it to a string with no transformations performed upon it."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer._range_type", 1]], ["_range_type"], 'do_method]>, "(", <$format, ["var", [], ["type"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Helper method for .", <$format, ["method", [["integer.range", 1]], ["range"], 'do_method]>, "()."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.and", 1]], ["and"], 'do_method]>, "(", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Performs a bitwise ", <$format, ["i", [], ["and"], 'do_i]>, " operation upon ", <$format, ["i", [], ["x"], 'do_i]>, " and ", <$format, ["i", [], ["y"], 'do_i]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.or", 1]], ["or"], 'do_method]>, "(", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Performs a bitwise ", <$format, ["i", [], ["or"], 'do_i]>, " operation upon ", <$format, ["i", [], ["x"], 'do_i]>, " and ", <$format, ["i", [], ["y"], 'do_i]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.xor", 1]], ["xor"], 'do_method]>, "(", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Performs a bitwise ", <$format, ["i", [], ["xor"], 'do_i]>, " operation upon ", <$format, ["i", [], ["x"], 'do_i]>, " and ", <$format, ["i", [], ["y"], 'do_i]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.shleft", 1]], ["shleft"], 'do_method]>, "(", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Performs a ", <$format, ["i", [], ["left shift"], 'do_i]>, " operation upon ", <$format, ["i", [], ["x"], 'do_i]>, " and ", <$format, ["i", [], ["y"], 'do_i]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.shright", 1]], ["shright"], 'do_method]>, "(", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Performs a ", <$format, ["i", [], ["right shift"], 'do_i]>, " operation upon ", <$format, ["i", [], ["x"], 'do_i]>, " and ", <$format, ["i", [], ["y"], 'do_i]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.not", 1]], ["not"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, ") ", <$format, ["i", [], ["native"], 'do_i]>], 'do_dt]>, <$format, ["dd", [], ["Performs a bitwise ", <$format, ["i", [], ["not"], 'do_i]>, " operation upon ", <$format, ["i", [], ["number"], 'do_i]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.to_english_text", 1]], ["to_english_text"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given an integer, converts it to englist text form, spelling out all numbers."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.to_bytes", 1]], ["to_bytes"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, "[, ", <$format, ["var", [], ["long"], 'do_var]>, "])"], 'do_dt]>, <$format, ["dd", [], ["Given an integer, converts it to the number of bytes. If the optional argument ", <$format, ["i", [], ["long"], 'do_i]>, " is given, then the long form of the unit name (kilobyte vs. kb) will be used."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.to_roman_numeral", 1]], ["to_roman_numeral"], 'do_method]>, "(", <$format, ["var", [], ["number"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Given an integer, converts it to the roman numeral representation."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["integer.roman_numeral_scheme", 1]], ["roman_numeral_scheme"], 'do_method]>, "(", <$format, ["var", [], ["val"], 'do_var]>, ", ", <$format, ["var", [], ["x"], 'do_var]>, ", ", <$format, ["var", [], ["y"], 'do_var]>, ", ", <$format, ["var", [], ["z"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Helper method for .", <$format, ["method", [["integer.to_roman_numeral", 1]], ["to_roman_numeral"], 'do_method]>, "()."], 'do_dd]>], 'do_dl]>], #[]]>;
var $help_node index = $help_index_objects;
var $help_node links = #[];
var $root created_on = 870205331;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_obj_integer];
var $root manager = $help_obj_integer;


