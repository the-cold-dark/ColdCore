
new object $help_obj_command_cache: $help_sys_parser;

var $dmi_data descriptions = #[];
var $has_name name = ['prop, "Command Cache", "Command Cache"];
var $help_node body = <$ctext_frob, [[<$format, ["p", [], [], 'do_p]>, "The $command_cache object is broken into two roles--caching commands, and interfacing the cache for commands (this primarily involves looking up commands in the cache)--or from another viewpoint, the Cache Server and Cache Client (respectively). While any object will always cache its own locally defined commands (those immediately defined on itself), an object has to be specially marked to cache all commands on itself and its ancestors. These objects are generally the parent class for users. Most other objects (primarily Command Modules) should only have locally defined commands. ", <$format, ["subj", [["level", "2"]], ["Cache Server"], 'do_subj]>, <$format, ["p", [], [], 'do_p]>, "If an object is a Cache Server, it will also fall into one of two Cache Server categories. EIther it is a cache for its own commands (a Local Cache), or it is a cache for all commands defined on its ancestors and itself (a General Cache). ", <$format, ["np", [], [], 'do_np]>, "The default behavior of a Cache Server is as a Local Cache. To configure an object as a General Cache, simply add the flag 'general_cache to the object, using the command @chmod:", <$format, ["p", [], [], 'do_p]>, <$format, ["dfn", [], ["@chmod +general_cache $new_cache_server"], 'do_dfn]>, <$format, ["p", [], [], 'do_p]>, "Keep in mind, an object only needs to be marked as a general cache if it needs to cache not only its own commands, but also those commands defined on its ancestors. This is generally not the case. ", <$format, ["subj", [["level", "2"]], ["Cache Client"], 'do_subj]>, <$format, ["p", [], [], 'do_p]>, "A cache client will lookup commands on all of its parents--which should be defined as General Caches, and on any of its Command Modules. Command Modules are objects which group a set of commands, allowing people to add or remove entire sets of commands, depending upon the interface they desire. ", <$format, ["subj", [["level", "2"]], ["Remote Command Cache"], 'do_subj]>, <$format, ["p", [], [], 'do_p]>, "An additional cache has been created that is not intended for use as an ancestor. Instead, it is intended as the general repository for all remote commands. It behaves slightly different than standard caches, and plays the role as both the client and server for itself. ", <$format, ["subj", [["level", "2"]], ["Method Definitions"], 'do_subj]>, <$format, ["ul", [], [<$format, ["li", [], [<$format, ["link", [["node", "$help_obj_command_cache_dmeths"]], ["Creation and Destruction Methods"], 'do_link]>], 'do_li]>, <$format, ["li", [], [<$format, ["link", [["node", "$help_obj_command_cache_smeths"]], ["Cache Server Methods"], 'do_link]>], 'do_li]>, <$format, ["li", [], [<$format, ["link", [["node", "$help_obj_command_cache_cmeths"]], ["Cache Client Methods"], 'do_link]>], 'do_li]>], 'do_ul]>], #[['links, #[["Creation and Destruction Methods", "$help_obj_command_cache_dmeths"], ["Cache Server Methods", "$help_obj_command_cache_smeths"], ["Cache Client Methods", "$help_obj_command_cache_cmeths"]]]]]>;
var $help_node index = $help_index_objects;
var $help_node links = #[["Creation and Destruction Methods", $help_obj_command_cache_dmeths], ["Cache Server Methods", $help_obj_command_cache_smeths], ["Cache Client Methods", $help_obj_command_cache_cmeths]];
var $root created_on = 887836027;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_obj_command_cache];
var $root manager = $help_obj_command_cache;


