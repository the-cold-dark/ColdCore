
new object $help_list_maps: $help_obj_list;

var $has_name name = ['prop, "Maps", "Maps"];
var $help_node body = <$ctext_frob, [[<$format, ["dl", [], [<$format, ["dt", [], [".", <$format, ["method", [["list.make", 1]], ["make"], 'do_method]>, "(", <$format, ["var", [], ["n"], 'do_var]>, "[,", <$format, ["var", [], ["elt"], 'do_var]>, "])"], 'do_dt]>, <$format, ["dd", [], ["Makes a list of ", <$format, ["var", [], ["n"], 'do_var]>, " copies of ", <$format, ["var", [], ["elt"], 'do_var]>, ". ", <$format, ["var", [], ["Elt"], 'do_var]>, " defaults to 0."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.mmap", 1]], ["mmap"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dd", [], ["Calls ", <$format, ["var", [], ["method"], 'do_var]>, " on each element (with additional arguments, if specified), returns the results."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.mfilter", 1]], ["mfilter"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dd", [], ["Similar to .", <$format, ["method", [["list.mmap", 1]], ["mmap"], 'do_method]>, "(), but returns the list of objects for which ", <$format, ["var", [], ["method"], 'do_var]>, " returned a true value."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.lmap", 1]], ["lmap"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dd", [], ["Calls ", <$format, ["link", [["node", "$help_func_sender"]], ["sender"], 'do_link]>, "().", <$format, ["var", [], ["method"], 'do_var]>, " on each element of the list, returns the results."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.omap", 1]], ["omap"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["object"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dd", [], ["Calls ", <$format, ["var", [], ["object"], 'do_var]>, ".", <$format, ["var", [], ["method"], 'do_var]>, " on each element."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.map_to_english", 1]], ["map_to_english"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dt", [], [".", <$format, ["method", [["list.map_to_string", 1]], ["map_to_string"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dd", [], ["Shorthand for .", <$format, ["method", [["list.mmap", 1]], ["mmap"], 'do_method]>, "() followed with .", <$format, ["method", [["list.to_english", 1]], ["to_english"], 'do_method]>, "()/.", <$format, ["method", [["list.to_string", 1]], ["to_string"], 'do_method]>, "()."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.element_maxlength", 1]], ["element_maxlength"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Finds the longest element (measuring by string representation)."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.nth_element_maxlength", 1]], ["nth_element_maxlength"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["n"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Same as list.", <$format, ["method", [["list.slice", 1]], ["slice"], 'do_method]>, "(", <$format, ["var", [], ["n"], 'do_var]>, ").", <$format, ["method", [["list.element_maxlength", 1]], ["element_maxlength"], 'do_method]>, "()."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.reverse", 1]], ["reverse"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Reverse the order of the elements of the ", <$format, ["var", [], ["list"], 'do_var]>, "."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.compress", 1]], ["compress"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Removes the repeated elements."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.slice", 1]], ["slice"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["n"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Returns the list of ", <$format, ["var", [], ["n"], 'do_var]>, "th elements from a list of lists. If ", <$format, ["var", [], ["n"], 'do_var]>, " is a list, it will return a list of lists."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.numbered_text", 1]], ["numbered_text"], 'do_method]>, "(", <$format, ["var", [], ["text"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Returns the ", <$format, ["var", [], ["text"], 'do_var]>, " with line numbers prepended."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.max", 1]], ["max"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dt", [], [".", <$format, ["method", [["list.min", 1]], ["min"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Returns minimal/maximal element of the ", <$format, ["var", [], ["list"], 'do_var]>, " (0 if empty)."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.fold", 1]], ["fold"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["object"], 'do_var]>, ", ", <$format, ["var", [], ["method"], 'do_var]>, ", ", <$format, ["var", [], ["args"], 'do_var]>, "...)"], 'do_dt]>, <$format, ["dd", [], ["Fold operation from functional programming. For an empty list, it returns 0, for a 1 element list, it returns the first element. Otherwise, it calls the ", <$format, ["var", [], ["method"], 'do_var]>, " for the first two elements, then calls it with the result and the third element, etc. It returns the last result."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.valid_objects", 1]], ["valid_objects"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Removes invalid objects from the ", <$format, ["var", [], ["list"], 'do_var]>], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.grep", 1]], ["grep"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ",", <$format, ["var", [], ["regexp"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["For each line that matches ", <$format, ["var", [], ["regexp"], 'do_var]>, ", returns [linenumber, regexp match regions, the line text]."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.count", 1]], ["count"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["elem"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Counts the number of occurences of element in the list."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["list.locate", 1]], ["locate"], 'do_method]>, "(", <$format, ["var", [], ["list"], 'do_var]>, ", ", <$format, ["var", [], ["value"], 'do_var]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Returns the list of indices into the list where the value of the element is equivalent to the value of ", <$format, ["var", [], ["value"], 'do_var]>, ". ", <$format, ["blockquote", [], ["[4, 2, 3, 4].locate(4) -> [1, 4]"], 'do_blockquote]>, " "], 'do_dd]>], 'do_dl]>], #[['links, #[["sender", "$help_func_sender"]]]]]>;
var $help_node links = #[["sender", $help_func_sender]];
var $help_node nolist = 0;
var $root created_on = 850833055;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_list_maps];
var $root manager = $help_list_maps;


