
new object $help_sys_event_register: $help_sys_events;

var $dmi_data descriptions = #[];
var $has_name name = ['prop, "Registering", "Registering"];
var $help_node body = <$ctext_frob, [[<$format, ["p", [], [], 'do_p]>, "The Registering subsystem allows an object to register an event hook along with when it should be turned on/off and when it should be updated (such as when the object is moved). Events are registered with the Event to Hook, when to Hook it and where to Hook it at (relay). ", <$format, ["np", [], [], 'do_np]>, "The event to hook can be any symbol that represents an event. An event type is created by simply sending it, so there is no registration or initialization involved in creating a new event (see ", <$format, ["link", [["node", "$help_sys_event_send"]], ["Sending Events"], 'do_link]>, " for more information) ", <$format, ["np", [], [], 'do_np]>, "When to hook the event can currently be either at startup, or when the object is moved. The symbols ", <$format, ["tt", [], ["'startup"], 'do_tt]>, " or ", <$format, ["tt", [], ["'move"], 'do_tt]>, " are sent to specify this. ", <$format, ["np", [], [], 'do_np]>, "The relay for the event, or where you hook into it at (see ", <$format, ["link", [["node", "$help_sys_event_send"]], ["Sending Events"], 'do_link]>, " for more information on event relay's) must be one of: ", <$format, ["tt", [], ["'location"], 'do_tt]>, ", ", <$format, ["tt", [], ["'this"], 'do_tt]>, " or an object which is a descendant of ", <$format, ["tt", [], ["$event_handler"], 'do_tt]>, ". If ", <$format, ["tt", [], ["'location"], 'do_tt]>, " is set as the source, the object's current location is used for the event relay. If ", <$format, ["tt", [], ["'this"], 'do_tt]>, " is used as the source, the object itself is used for the relay. ", <$format, ["np", [], [], 'do_np]>, "The methods used for Registering are:", <$format, ["p", [], [], 'do_p]>, <$format, ["dl", [], [<$format, ["dt", [], [".", <$format, ["method", [["event_handler.register_event", 1]], ["register_event"], 'do_method]>, "(", <$format, ["i", [], ["event"], 'do_i]>, ", ", <$format, ["i", [], ["when"], 'do_i]>, ", ", <$format, ["i", [], ["relay"], 'do_i]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Used to register an event hook. You should only need to call this method once in the life of an object, unless it is unregistered later."], 'do_dd]>, <$format, ["dt", [], [".", <$format, ["method", [["event_handler.deregister_event", 1]], ["deregister_event"], 'do_method]>, "(", <$format, ["i", [], ["event"], 'do_i]>, ", ", <$format, ["i", [], ["when"], 'do_i]>, ")"], 'do_dt]>, <$format, ["dd", [], ["Used to de-register an event hook."], 'do_dd]>], 'do_dl]>], #[['links, #[["Sending Events", "$help_sys_event_send"]]]]]>;
var $help_node links = #[["Sending Events", $help_sys_event_send]];
var $root created_on = 864944385;
var $root flags = ['variables, 'methods, 'code, 'core];
var $root inited = 1;
var $root managed = [$help_sys_event_register];
var $root manager = $help_sys_event_register;


